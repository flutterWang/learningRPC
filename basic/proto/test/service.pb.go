// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/test/service.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DocumentExtType int32

const (
	DocumentExtType_HTML DocumentExtType = 0
	DocumentExtType_XML  DocumentExtType = 1
	DocumentExtType_JSON DocumentExtType = 2
	DocumentExtType_PDF  DocumentExtType = 3
)

var DocumentExtType_name = map[int32]string{
	0: "HTML",
	1: "XML",
	2: "JSON",
	3: "PDF",
}

var DocumentExtType_value = map[string]int32{
	"HTML": 0,
	"XML":  1,
	"JSON": 2,
	"PDF":  3,
}

func (x DocumentExtType) String() string {
	return proto.EnumName(DocumentExtType_name, int32(x))
}

func (DocumentExtType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d13fa509d531c2d, []int{0}
}

type TestRequest struct {
	Query    string             `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Type     DocumentExtType    `protobuf:"varint,2,opt,name=type,proto3,enum=test.DocumentExtType" json:"type,omitempty"`
	TestMap  map[string]string  `protobuf:"bytes,3,rep,name=testMap,proto3" json:"testMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Child    *TestRequest_Child `protobuf:"bytes,4,opt,name=child,proto3" json:"child,omitempty"`
	Char     []byte             `protobuf:"bytes,5,opt,name=char,proto3" json:"char,omitempty"`
	Snippets []string           `protobuf:"bytes,6,rep,name=snippets,proto3" json:"snippets,omitempty"`
	// Types that are valid to be assigned to TestOneof:
	//	*TestRequest_Name
	//	*TestRequest_SubName
	TestOneof            isTestRequest_TestOneof `protobuf_oneof:"test_oneof"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d13fa509d531c2d, []int{0}
}

func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (m *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(m, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *TestRequest) GetType() DocumentExtType {
	if m != nil {
		return m.Type
	}
	return DocumentExtType_HTML
}

func (m *TestRequest) GetTestMap() map[string]string {
	if m != nil {
		return m.TestMap
	}
	return nil
}

func (m *TestRequest) GetChild() *TestRequest_Child {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *TestRequest) GetChar() []byte {
	if m != nil {
		return m.Char
	}
	return nil
}

func (m *TestRequest) GetSnippets() []string {
	if m != nil {
		return m.Snippets
	}
	return nil
}

type isTestRequest_TestOneof interface {
	isTestRequest_TestOneof()
}

type TestRequest_Name struct {
	Name string `protobuf:"bytes,7,opt,name=name,proto3,oneof"`
}

type TestRequest_SubName struct {
	SubName string `protobuf:"bytes,8,opt,name=sub_name,json=subName,proto3,oneof"`
}

func (*TestRequest_Name) isTestRequest_TestOneof() {}

func (*TestRequest_SubName) isTestRequest_TestOneof() {}

func (m *TestRequest) GetTestOneof() isTestRequest_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (m *TestRequest) GetName() string {
	if x, ok := m.GetTestOneof().(*TestRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (m *TestRequest) GetSubName() string {
	if x, ok := m.GetTestOneof().(*TestRequest_SubName); ok {
		return x.SubName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TestRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TestRequest_Name)(nil),
		(*TestRequest_SubName)(nil),
	}
}

type TestRequest_Child struct {
	Age                  int32    `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest_Child) Reset()         { *m = TestRequest_Child{} }
func (m *TestRequest_Child) String() string { return proto.CompactTextString(m) }
func (*TestRequest_Child) ProtoMessage()    {}
func (*TestRequest_Child) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d13fa509d531c2d, []int{0, 1}
}

func (m *TestRequest_Child) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest_Child.Unmarshal(m, b)
}
func (m *TestRequest_Child) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest_Child.Marshal(b, m, deterministic)
}
func (m *TestRequest_Child) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest_Child.Merge(m, src)
}
func (m *TestRequest_Child) XXX_Size() int {
	return xxx_messageInfo_TestRequest_Child.Size(m)
}
func (m *TestRequest_Child) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest_Child.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest_Child proto.InternalMessageInfo

func (m *TestRequest_Child) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type TestResponse struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Details              *any.Any `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d13fa509d531c2d, []int{1}
}

func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (m *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(m, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

func (m *TestResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *TestResponse) GetDetails() *any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type TestDetail struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestDetail) Reset()         { *m = TestDetail{} }
func (m *TestDetail) String() string { return proto.CompactTextString(m) }
func (*TestDetail) ProtoMessage()    {}
func (*TestDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d13fa509d531c2d, []int{2}
}

func (m *TestDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestDetail.Unmarshal(m, b)
}
func (m *TestDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestDetail.Marshal(b, m, deterministic)
}
func (m *TestDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestDetail.Merge(m, src)
}
func (m *TestDetail) XXX_Size() int {
	return xxx_messageInfo_TestDetail.Size(m)
}
func (m *TestDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TestDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TestDetail proto.InternalMessageInfo

func (m *TestDetail) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("test.DocumentExtType", DocumentExtType_name, DocumentExtType_value)
	proto.RegisterType((*TestRequest)(nil), "test.TestRequest")
	proto.RegisterMapType((map[string]string)(nil), "test.TestRequest.TestMapEntry")
	proto.RegisterType((*TestRequest_Child)(nil), "test.TestRequest.Child")
	proto.RegisterType((*TestResponse)(nil), "test.TestResponse")
	proto.RegisterType((*TestDetail)(nil), "test.TestDetail")
}

func init() {
	proto.RegisterFile("proto/test/service.proto", fileDescriptor_5d13fa509d531c2d)
}

var fileDescriptor_5d13fa509d531c2d = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0x63, 0xbb, 0x4e, 0x26, 0x11, 0x98, 0x55, 0x10, 0xae, 0x91, 0x2a, 0x2b, 0x27, 0x83,
	0x84, 0x2d, 0x99, 0x43, 0xab, 0xde, 0x80, 0x14, 0x55, 0xa8, 0x29, 0x68, 0xc9, 0x81, 0x5b, 0xb5,
	0x49, 0xa7, 0x6e, 0x44, 0xfc, 0x51, 0xef, 0xba, 0xc2, 0xbf, 0x1e, 0x34, 0xbb, 0x35, 0x8a, 0x9a,
	0xd3, 0xce, 0x7b, 0xf3, 0x76, 0xbe, 0x1e, 0x04, 0x75, 0x53, 0xa9, 0x2a, 0x55, 0x28, 0x55, 0x2a,
	0xb1, 0x79, 0xdc, 0x6e, 0x30, 0xd1, 0x14, 0x73, 0x88, 0x0b, 0x8f, 0xf3, 0xaa, 0xca, 0x77, 0x98,
	0x6a, 0x6e, 0xdd, 0xde, 0xa5, 0xa2, 0xec, 0x8c, 0x60, 0xfe, 0x77, 0x08, 0x93, 0x15, 0x4a, 0xc5,
	0xf1, 0xa1, 0x45, 0xa9, 0xd8, 0x0c, 0xdc, 0x87, 0x16, 0x9b, 0x2e, 0xb0, 0x22, 0x2b, 0x1e, 0x73,
	0x03, 0xd8, 0x3b, 0x70, 0x54, 0x57, 0x63, 0x30, 0x8c, 0xac, 0xf8, 0x45, 0xf6, 0x3a, 0xa1, 0xaa,
	0xc9, 0xa2, 0xda, 0xb4, 0x05, 0x96, 0xea, 0xe2, 0x8f, 0x5a, 0x75, 0x35, 0x72, 0x2d, 0x61, 0x67,
	0xe0, 0x51, 0x76, 0x29, 0xea, 0xc0, 0x8e, 0xec, 0x78, 0x92, 0x9d, 0x18, 0xf5, 0x5e, 0x13, 0x1d,
	0x2f, 0x45, 0x7d, 0x51, 0xaa, 0xa6, 0xe3, 0xbd, 0x9c, 0x7d, 0x00, 0x77, 0x73, 0xbf, 0xdd, 0xdd,
	0x06, 0x4e, 0x64, 0xc5, 0x93, 0xec, 0xcd, 0xe1, 0xbf, 0x2f, 0x94, 0xe6, 0x46, 0xc5, 0x18, 0x38,
	0x9b, 0x7b, 0xd1, 0x04, 0x6e, 0x64, 0xc5, 0x53, 0xae, 0x63, 0x16, 0xc2, 0x48, 0x96, 0xdb, 0xba,
	0x46, 0x25, 0x83, 0xa3, 0xc8, 0x8e, 0xc7, 0xfc, 0x3f, 0x66, 0x33, 0x70, 0x4a, 0x51, 0x60, 0xe0,
	0xd1, 0x62, 0x97, 0x03, 0xae, 0x11, 0x7b, 0x0b, 0x23, 0xd9, 0xae, 0x6f, 0x74, 0x66, 0xf4, 0x94,
	0xf1, 0x64, 0xbb, 0xbe, 0x16, 0x05, 0x86, 0xe7, 0x30, 0xdd, 0x1f, 0x95, 0xf9, 0x60, 0xff, 0xc6,
	0xfe, 0x34, 0x14, 0xd2, 0xb9, 0x1e, 0xc5, 0xae, 0x35, 0x97, 0x19, 0x73, 0x03, 0xce, 0x87, 0x67,
	0x56, 0x78, 0x0c, 0xae, 0x1e, 0x97, 0x3e, 0x89, 0x1c, 0xf5, 0x27, 0x97, 0x53, 0xf8, 0x79, 0x0a,
	0x40, 0xab, 0xdd, 0x54, 0x25, 0x56, 0x77, 0xf3, 0x95, 0x69, 0xc2, 0x51, 0xd6, 0x55, 0x29, 0x91,
	0x4a, 0x4a, 0x25, 0x14, 0xf6, 0x0e, 0x68, 0xc0, 0x12, 0xf0, 0x6e, 0x51, 0x89, 0xed, 0x4e, 0xea,
	0x56, 0x93, 0x6c, 0x96, 0x18, 0x53, 0x93, 0xde, 0xd4, 0xe4, 0x53, 0xd9, 0xf1, 0x5e, 0x34, 0x3f,
	0x01, 0xa0, 0xaa, 0x0b, 0x0d, 0x69, 0x86, 0x42, 0xe6, 0xfd, 0xe0, 0x85, 0xcc, 0xdf, 0x9f, 0xc2,
	0xcb, 0x67, 0xfe, 0xb1, 0x11, 0x38, 0x97, 0xab, 0xe5, 0x95, 0x3f, 0x60, 0x1e, 0xd8, 0xbf, 0x96,
	0x57, 0xbe, 0x45, 0xd4, 0xb7, 0x9f, 0xdf, 0xaf, 0xfd, 0x21, 0x51, 0x3f, 0x16, 0x5f, 0x7d, 0x3b,
	0x3b, 0x05, 0x87, 0x0a, 0xb3, 0xf4, 0xe9, 0x7d, 0x75, 0x60, 0x53, 0xc8, 0xf6, 0x29, 0xb3, 0xd5,
	0x7c, 0xb0, 0x3e, 0xd2, 0x83, 0x7e, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x17, 0x7e, 0x38, 0x6d,
	0xad, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestClient is the client API for Test service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestClient interface {
	// Sends a greeting
	Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error)
}

type testClient struct {
	cc grpc.ClientConnInterface
}

func NewTestClient(cc grpc.ClientConnInterface) TestClient {
	return &testClient{cc}
}

func (c *testClient) Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/test.Test/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServer is the server API for Test service.
type TestServer interface {
	// Sends a greeting
	Test(context.Context, *TestRequest) (*TestResponse, error)
}

// UnimplementedTestServer can be embedded to have forward compatible implementations.
type UnimplementedTestServer struct {
}

func (*UnimplementedTestServer) Test(ctx context.Context, req *TestRequest) (*TestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterTestServer(s *grpc.Server, srv TestServer) {
	s.RegisterService(&_Test_serviceDesc, srv)
}

func _Test_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Test/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServer).Test(ctx, req.(*TestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Test_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.Test",
	HandlerType: (*TestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Test",
			Handler:    _Test_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/test/service.proto",
}
